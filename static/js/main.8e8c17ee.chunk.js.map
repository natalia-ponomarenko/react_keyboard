{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","isKeyPressed","handleKeyup","event","key","setState","window","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","document","getElementById"],"mappings":"2MAOaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,GACZC,cAAc,GAHlB,EAcEC,YAAc,SAACC,GACb,IAAQC,EAAQD,EAARC,IAER,EAAKC,SAAS,CACZL,WAAYI,EACZH,cAAc,KAnBpB,uDAME,WACEK,OAAOC,iBAAiB,QAASC,KAAKN,eAP1C,kCAUE,WACEI,OAAOG,oBAAoB,QAASD,KAAKN,eAX7C,oBAuBE,WACE,MAAqCM,KAAKT,MAAlCC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,aAEpB,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,EAAY,mCAA+BD,EAA/B,MAAgD,kCA7BvE,GAAyBW,a,MCFzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8e8c17ee.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string,\n  isKeyPressed: boolean,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: '',\n    isKeyPressed: false,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keyup', this.handleKeyup);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keyup', this.handleKeyup);\n  }\n\n  handleKeyup = (event: KeyboardEvent) => {\n    const { key } = event;\n\n    this.setState({\n      pressedKey: key,\n      isKeyPressed: true,\n    });\n  };\n\n  render() {\n    const { pressedKey, isKeyPressed } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {isKeyPressed ? `The last pressed key is [${pressedKey}] ` : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}